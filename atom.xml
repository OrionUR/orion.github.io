<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Orion&#39;s Blog</title>
  <subtitle>私人博客，偶尔开开车，挂挂代码，写写影评，聊聊八卦</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://orionur.github.io/"/>
  <updated>2019-09-23T02:05:54.453Z</updated>
  <id>http://orionur.github.io/</id>
  
  <author>
    <name>Orion</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>git笔记</title>
    <link href="http://orionur.github.io/2019/09/22/9/"/>
    <id>http://orionur.github.io/2019/09/22/9/</id>
    <published>2019-09-23T00:40:00.000Z</published>
    <updated>2019-09-23T02:05:54.453Z</updated>
    
    <content type="html">&lt;p&gt;本篇是关于使用git的笔记&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;安装Git&quot;&gt;&lt;a href=&quot;#安装Git&quot; class=&quot;headerlink&quot; title=&quot;安装Git&quot;&gt;&lt;/a&gt;安装Git&lt;/h2&gt;&lt;p&gt;由于我目前只使用Linux，所以这里只记录Linux安装Git的方法&lt;br&gt;直接在&lt;code&gt;terminal&lt;/code&gt;上输入&lt;code&gt;git&lt;/code&gt;，如果你没安装Git，就会有提示信息，告诉该怎么安装&lt;br&gt;如：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ git&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;The program &amp;apos;git&amp;apos; is&amp;apos; is currently not installed. You can install it by typing:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo apt-get install git&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&quot;Git命令&quot;&gt;&lt;a href=&quot;#Git命令&quot; class=&quot;headerlink&quot; title=&quot;Git命令&quot;&gt;&lt;/a&gt;Git命令&lt;/h2&gt;&lt;p&gt;&lt;code&gt;git init&lt;/code&gt;：创建仓库&lt;br&gt;&lt;code&gt;git add &amp;lt;file&amp;gt;&lt;/code&gt;：添加file到暂存区&lt;br&gt;&lt;code&gt;git commit&lt;/code&gt;：提交到仓库&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;提交到仓库，需要输入备注信息，最好如实输入，好方便以后管理&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;git push&lt;/code&gt;：提交到GitHub上（如果你已经绑定了GitHub）&lt;br&gt;&lt;code&gt;git status&lt;/code&gt;：查看仓库当前的状态&lt;br&gt;&lt;code&gt;git diff &amp;lt;file&amp;gt;&lt;/code&gt;：对比file文件，跟上次提交到仓库里的，修改了什么内容&lt;br&gt;&lt;code&gt;git log&lt;/code&gt;：查看日志&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;如果觉得输出信息太多，可以加上&lt;code&gt;--pretty=oneline&lt;/code&gt;参数&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;git reset --hard HEAD^&lt;/code&gt;：&lt;code&gt;HEAD&lt;/code&gt;为当前版本，&lt;code&gt;HEAD^&lt;/code&gt;为之前一个版本，上上一个版本就是&lt;code&gt;HEAD^^&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;如果是往上100个版本，可以写成&lt;code&gt;HEAD~100&lt;/code&gt;&lt;br&gt;当然也可以用commit id来代替&lt;br&gt;如果上一个版本commit id为&lt;code&gt;1094adb&lt;/code&gt;，那么就可以用&lt;code&gt;1094adb&lt;/code&gt;代替&lt;code&gt;HEAD^&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;git relog&lt;/code&gt;：记录了每一次命令，可以用此命令查看过去的commit id&lt;br&gt;&lt;code&gt;git checkout -- &amp;lt;file&amp;gt;&lt;/code&gt;：把file文件恢复到之前的版本&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;这里有两种情况&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;xxx修改后还没被放到暂存区，那么现在就会恢复到和仓库版本一模一样的状态&lt;/li&gt;
&lt;li&gt;xxx已经添加到暂存区，但又接着修改，那么现在就会回复到和暂存区版本一模一样的状态&lt;br&gt;如果修改后又&lt;code&gt;git add&lt;/code&gt;添加到暂存区，但还没&lt;code&gt;git commit&lt;/code&gt;&lt;br&gt;那么可以用&lt;code&gt;git reset HEAD &amp;lt;file&amp;gt;&lt;/code&gt;把暂存区的修改撤销掉（unstage）&lt;br&gt;再用上边的方法恢复&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;git rm &amp;lt;file&amp;gt;&lt;/code&gt;：把file文件从仓库中删除&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;要commit后才能确认删除，删错了可以用checkout恢复&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;GitHub&quot;&gt;&lt;a href=&quot;#GitHub&quot; class=&quot;headerlink&quot; title=&quot;GitHub&quot;&gt;&lt;/a&gt;GitHub&lt;/h2&gt;&lt;h5 id=&quot;1-创建SSH-Key&quot;&gt;&lt;a href=&quot;#1-创建SSH-Key&quot; class=&quot;headerlink&quot; title=&quot;1. 创建SSH Key&quot;&gt;&lt;/a&gt;1. 创建SSH Key&lt;/h5&gt;&lt;p&gt;在用户主目录里，查看是否有&lt;code&gt;id_rsa&lt;/code&gt;和&lt;code&gt;id_rsa.puh&lt;/code&gt;这两个文件&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;ls ~/.ssh/&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;如果没有，则创建SSH Key&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;ssh-keygen -t rsa -C “your email@example.com”&lt;br&gt;引号里填写的是你的Email地址&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;一路回车即可，如果提示你输入密码，可以不输入&lt;br&gt;若是不幸输入了，后边会教你怎么免密码登陆（我就是如此）&lt;br&gt;如果一切顺利，可以用上边查看命令看看&lt;code&gt;.ssh&lt;/code&gt;目录里，是否有&lt;code&gt;id_rsa&lt;/code&gt;和&lt;code&gt;id_rsa.puh&lt;/code&gt;这两个文件&lt;br&gt;这两个就是SSH Key的密钥对，&lt;code&gt;id_rsa&lt;/code&gt;是私钥，不能泄露出去&lt;br&gt;&lt;code&gt;id_rsa.puh&lt;/code&gt;是公钥，可以放心地告诉任何人&lt;/p&gt;
&lt;h5 id=&quot;2-登陆GitHub，打开Account-settings——SSH-Keys页面&quot;&gt;&lt;a href=&quot;#2-登陆GitHub，打开Account-settings——SSH-Keys页面&quot; class=&quot;headerlink&quot; title=&quot;2. 登陆GitHub，打开Account settings——SSH Keys页面&quot;&gt;&lt;/a&gt;2. 登陆GitHub，打开Account settings——SSH Keys页面&lt;/h5&gt;&lt;p&gt;然后，点Add SSH Key，填上任意title，在Key文本框里粘贴&lt;code&gt;id_rsa.puh&lt;/code&gt;文件的内容&lt;/p&gt;
&lt;h5 id=&quot;3-把本地仓库的内容，推送到GitHub仓库&quot;&gt;&lt;a href=&quot;#3-把本地仓库的内容，推送到GitHub仓库&quot; class=&quot;headerlink&quot; title=&quot;3. 把本地仓库的内容，推送到GitHub仓库&quot;&gt;&lt;/a&gt;3. 把本地仓库的内容，推送到GitHub仓库&lt;/h5&gt;&lt;p&gt;在本地仓库目录下运行&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ git remote add origin git@github.com:OrionUR/rmdir.git&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;origin后边的，是我的GitHub仓库，你要替换成自己的，否则你关联的就是我的仓库&lt;br&gt;至于右边那串东西怎么知道&lt;br&gt;从你创建的repository里，有个绿色的Clone or download选项&lt;br&gt;点开后选择右上方的Use SSH&lt;br&gt;就能看到属于你仓库的SSH Key了&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ git push -u origin master&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;由于远程仓库是空的，所以第一次推送master分支时，需要加上&lt;code&gt;-u&lt;/code&gt;参数&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;此后，每次本地提交，就可以使用&lt;code&gt;git push origin master&lt;/code&gt;推送最新修改&lt;/p&gt;
&lt;h5 id=&quot;4-SSH警告&quot;&gt;&lt;a href=&quot;#4-SSH警告&quot; class=&quot;headerlink&quot; title=&quot;4. SSH警告&quot;&gt;&lt;/a&gt;4. SSH警告&lt;/h5&gt;&lt;p&gt;第一次使用&lt;code&gt;push&lt;/code&gt;命令链接GitHub时，会得到一个警告&lt;br&gt;输入&lt;code&gt;yes&lt;/code&gt;回车即可&lt;br&gt;如果之前有设置密码，那么会提示输入密码，直接输入即可&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;可以使用&lt;code&gt;ssh-add ~/.ssh/id_rsa&lt;/code&gt;命令配置免密登陆&lt;br&gt;这样以后&lt;code&gt;push&lt;/code&gt;就不会再要求输入密码了&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;Reference&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://liaoxuefeng.com/wiki/896043488029600&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;廖雪峰的官方网站&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;本篇是关于使用git的笔记&lt;/p&gt;
    
    </summary>
    
      <category term="Tech" scheme="http://orionur.github.io/categories/Tech/"/>
    
    
      <category term="git" scheme="http://orionur.github.io/tags/git/"/>
    
      <category term="github" scheme="http://orionur.github.io/tags/github/"/>
    
  </entry>
  
  <entry>
    <title>捣鼓Sublime Text 3</title>
    <link href="http://orionur.github.io/2016/06/03/7/"/>
    <id>http://orionur.github.io/2016/06/03/7/</id>
    <published>2016-06-03T16:40:01.000Z</published>
    <updated>2016-12-24T21:26:47.000Z</updated>
    
    <content type="html">&lt;p&gt;之前一直用的是Sublime Text 2，由于搜索的时候看到很多人说3好&lt;br&gt;于是打算捣鼓一下&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;本体&quot;&gt;&lt;a href=&quot;#本体&quot; class=&quot;headerlink&quot; title=&quot;本体&quot;&gt;&lt;/a&gt;本体&lt;/h3&gt;&lt;p&gt;首先遇到的问题是，brew-cask里没有Sublime Text 3&lt;br&gt;上网搜了下，找到了解决方法&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;brew tap caskroom/versions&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;brew cask install sublime-text3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;然后问题又出现了&lt;br&gt;不知道为什么一直显示&lt;br&gt;&lt;code&gt;Warning: Unexpected method &amp;#39;appdir&amp;#39; called on Cask sublime-text3.&lt;/code&gt;&lt;br&gt;和&lt;br&gt;&lt;code&gt;Error: Download failed on Cask &amp;#39;sublime-text3&amp;#39; with message: Download failed: https://download.sublimetext.com/Sublime%20Text%20Build%203114.dmg&lt;/code&gt;&lt;br&gt;根据提示重新安装brew-cask并且更新brew&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;brew uninstall --force brew-cask&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;brew update&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;再然后重新安装&lt;code&gt;brew cask install sublime-text3&lt;/code&gt;成功&lt;/p&gt;
&lt;h3 id=&quot;插件&quot;&gt;&lt;a href=&quot;#插件&quot; class=&quot;headerlink&quot; title=&quot;插件&quot;&gt;&lt;/a&gt;插件&lt;/h3&gt;&lt;p&gt;用Sublime Text 3最主要的也是因为它有非常丰富的插件&lt;br&gt;插件的安装一般都依赖于它本身的Package Control&lt;br&gt;关于如何安装具体可以参考&lt;a href=&quot;https://packagecontrol.io/installation&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;官方文档&lt;/a&gt;&lt;br&gt;这里我简单说一下&lt;br&gt;菜单栏view -&amp;gt; Show Console，底部会有个命令输入框，将下边的代码复制粘贴到输入框内回车即可&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;import urllib.request,os,hashlib; h = &amp;apos;df21e130d211cfc94d9b0905775a7c0f&amp;apos; + &amp;apos;1e3d39e33b79698005270310898eea76&amp;apos;; pf = &amp;apos;Package Control.sublime-package&amp;apos;; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( &amp;apos;http://packagecontrol.io/&amp;apos; + pf.replace(&amp;apos; &amp;apos;, &amp;apos;%20&amp;apos;)).read(); dh = hashlib.sha256(by).hexdigest(); print(&amp;apos;Error validating download (got %s instead of %s), please try manual install&amp;apos; % (dh, h)) if dh != h else open(os.path.join( ipp, pf), &amp;apos;wb&amp;apos; ).write(by)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;安装好Package Control后，就可以使用快捷键&lt;code&gt;command + Shift + p&lt;/code&gt;来安装插件&lt;br&gt;在命令框内输入&lt;code&gt;pci&lt;/code&gt;能快速进入插件浏览界面&lt;br&gt;&lt;img src=&quot;http://ww3.sinaimg.cn/large/badbf5f3gw1f4htx1mqf6j20ed0a6t9q.jpg&quot; alt=&quot;pci&quot;&gt;&lt;br&gt;由于我现在用的也不是很久，也就引用一些大家都觉得比较好的插件&lt;br&gt;&lt;strong&gt;ConvertToUTF8&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;支持GBK, BIG5, EUC-KR, EUC-JP, Shift_JIS 等编码的插件&lt;br&gt;由于ST默认是使用UTF-8编码，但不支持其他类似GBK，CJK编码&lt;br&gt;有了这个插件，在打开对应ST不支持的编码文件的时候，会自动选择合适的编码转换&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;DocBlockr&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;DocBlockr可以自动生成PHPDoc风格的注释&lt;br&gt;它支持的语言有Javascript, PHP, ActionScript, CoffeeScript, Java, Objective C, C, C++&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;Emmet&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;快速生成html代码段的插件，强大到无与伦比，可以超快速编写HTML/CSS/JS&lt;br&gt;web开发必备插件&lt;br&gt;这里推荐两个链接：&lt;a href=&quot;http://www.w3cplus.com/tools/using-emmet-speed-front-end-web-development.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;使用Emmet加速Web前端开发&lt;/a&gt;，&lt;a href=&quot;http://www.yunxiu.org/blog/article/5490.htm&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Emmet 插件使用教程（转载）&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;SideBarEnhancements&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;侧边栏增强插件&lt;br&gt;这么说吧，原先ST的侧边栏就是A罩杯，有了这个插件就变成了H罩杯&lt;br&gt;默认ST不打开侧边栏，可以到View -&amp;gt; Side Bar -&amp;gt; Show Open File&lt;br&gt;之后可以通过快捷键&lt;code&gt;command + k&lt;/code&gt; &lt;code&gt;command + b&lt;/code&gt;来显示或者隐藏侧边栏&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;过多的插件会导致ST变慢变卡，请谨慎选择插件&lt;/code&gt;&lt;br&gt;至于删除插件，在Package Control中输入&lt;code&gt;remove package&lt;/code&gt;&lt;br&gt;然后选择要卸载的插件即可&lt;/p&gt;
&lt;h3 id=&quot;小技巧&quot;&gt;&lt;a href=&quot;#小技巧&quot; class=&quot;headerlink&quot; title=&quot;小技巧&quot;&gt;&lt;/a&gt;小技巧&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;跳出自动补全&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;由于ST有自动补全功能，可是每次当我输入完括号内的内容后，都要将右手小拇指移动到右键的位置&lt;br&gt;觉得超级麻烦，于是就找了找，发现可以用自定义快捷键的方法去实现&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;[&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#123;&amp;quot;keys&amp;quot;: [&amp;quot;enter&amp;quot;], &amp;quot;command&amp;quot;: &amp;quot;move&amp;quot;, &amp;quot;args&amp;quot;: &amp;#123;&amp;quot;by&amp;quot;: &amp;quot;characters&amp;quot;, &amp;quot;forward&amp;quot;: true&amp;#125;, &amp;quot;context&amp;quot;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        [&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#123; &amp;quot;key&amp;quot;: &amp;quot;following_text&amp;quot;, &amp;quot;operator&amp;quot;: &amp;quot;regex_contains&amp;quot;, &amp;quot;operand&amp;quot;: &amp;quot;^[)\\]\\&amp;gt;\\&amp;apos;\\\&amp;quot;\\ %&amp;gt;\\&amp;#125;\\;\\,]&amp;quot;, &amp;quot;match_all&amp;quot;: true &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#123; &amp;quot;key&amp;quot;: &amp;quot;preceding_text&amp;quot;, &amp;quot;operator&amp;quot;: &amp;quot;not_regex_match&amp;quot;, &amp;quot;operand&amp;quot;: &amp;quot;^.*\\&amp;#123;$&amp;quot;, &amp;quot;match_all&amp;quot;: true  &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#123; &amp;quot;key&amp;quot;: &amp;quot;auto_complete_visible&amp;quot;, &amp;quot;operator&amp;quot;: &amp;quot;equal&amp;quot;, &amp;quot;operand&amp;quot;: false &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;将以上的代码复制到Sublime Text -&amp;gt; Preferences -&amp;gt; Key Bindings - User&lt;br&gt;以后只要输入完内容后，按回车，就自动到引号后，非常方便&lt;/p&gt;
&lt;h3 id=&quot;主题&quot;&gt;&lt;a href=&quot;#主题&quot; class=&quot;headerlink&quot; title=&quot;主题&quot;&gt;&lt;/a&gt;主题&lt;/h3&gt;&lt;p&gt;最后分享一个主题&lt;code&gt;One Dark Material&lt;/code&gt;，是仿Atom.io的UI主题&lt;br&gt;&lt;img src=&quot;http://ww1.sinaimg.cn/large/badbf5f3gw1f4ix7ypgs6j21hc0sigqc.jpg&quot; alt=&quot;One Dark Material&quot;&gt;&lt;br&gt;地址在这：&lt;a href=&quot;https://github.com/ptraceur/OneDarkMaterial&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;One Dark Material Theme&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;Reference&lt;/strong&gt;&lt;br&gt;&lt;a href=&quot;Warning: Unexpected method &amp;#39;appdir&amp;#39; called on Cask sublime-text3&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;How to Install Sublime Text 3 using Homebrew&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://www.zhihu.com/question/24736400&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;sublime text 3 插件推荐？&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://www.jeffjade.com/2015/12/15/2015-04-17-toss-sublime-text/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;如何优雅地使用Sublime Text&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://guoqiao.me/post/2015/0110-sublime-text-config-for-mac-os-x&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Mac OS X 上 Sublime Text 3 的配置&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://ruby-china.org/topics/4824&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;sublime 怎样跳出括号？&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/ptraceur/OneDarkMaterial&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;One Dark Material Theme&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;之前一直用的是Sublime Text 2，由于搜索的时候看到很多人说3好&lt;br&gt;于是打算捣鼓一下&lt;br&gt;
    
    </summary>
    
      <category term="Tech" scheme="http://orionur.github.io/categories/Tech/"/>
    
    
      <category term="Sublime Text 3" scheme="http://orionur.github.io/tags/Sublime-Text-3/"/>
    
  </entry>
  
  <entry>
    <title>Mac软件推荐－MPV</title>
    <link href="http://orionur.github.io/2016/05/18/6/"/>
    <id>http://orionur.github.io/2016/05/18/6/</id>
    <published>2016-05-18T23:14:02.000Z</published>
    <updated>2016-05-19T03:37:43.000Z</updated>
    
    <content type="html">&lt;p&gt;某只宠物说&lt;code&gt;欲奴&lt;/code&gt;出了，于是打算下载下来一起看&lt;br&gt;然后才想起这台电脑还没有安装播放器&lt;br&gt;搜索了一遍，发现mpv是大家都推崇的播放器&lt;br&gt;一番研究下来，分享一下自己的心得&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;首先当然是安装&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;brew install mpv --with-bundle&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;brew linkapps mpv&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;第一条命令是安装mpv，第二条是在应用程序里创建一个mpv的快捷方式&lt;br&gt;现在你可以用mpv观看视频了&lt;br&gt;mpv是一个极其简约的视频软件&lt;br&gt;没有用户界面去设置，一切都需要自己去敲代码设置&lt;br&gt;首先输入&lt;code&gt;nano ~/.config/mpv/mpv.conf&lt;/code&gt;来配置一下mpv&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;screenshot-template=~/Desktop/mpv-screenshot-%n&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;screenshot-format=jpg&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;no-border&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;autofit-larger=100%&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sub-auto=fuzzy&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;vo=opengl-hd:interpolation:icc-profile-auto&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;save-position-on-quit&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;从上往下总共7行，我逐一解释解释&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;截图存放地址，我设置成存放到桌面，并且命名为mpv-screenshot-%n&lt;br&gt;其中%n的意思是递增的数，从1开始&lt;/li&gt;
&lt;li&gt;截图保存的格式，我设置为jpg&lt;/li&gt;
&lt;li&gt;无边框，反正mpv的界面那么丑，去掉反而还好看一些&lt;/li&gt;
&lt;li&gt;播放器最大宽高为屏幕宽高，这样就不会因为视频比屏幕分辨率大而导致的显示不完全&lt;/li&gt;
&lt;li&gt;字幕自动加载，默认是跟视频名完全相同&lt;/li&gt;
&lt;li&gt;使用OpenGL-HD来渲染视频，&lt;code&gt;interpolation&lt;/code&gt;是减少镜头平移时的顿挫感的参数&lt;/li&gt;
&lt;li&gt;退出并保存播放位置&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;大致上是这样的了，还是很多其他的设置参数，具体可以参考&lt;a href=&quot;https://github.com/mpv-player/mpv/blob/master/DOCS/man/options.rst&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;官方文档&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;另外在mpv上操作基本上都是靠快捷键，没有菜单可以选择&lt;br&gt;以下是一些常用的快捷键&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Space&lt;/code&gt;播放/暂停&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Up&lt;/code&gt;快进60秒&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Down&lt;/code&gt;回退60秒&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Left&lt;/code&gt;回退5秒&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Right&lt;/code&gt;快进5秒&lt;/li&gt;
&lt;li&gt;&lt;code&gt;j&lt;/code&gt;循环选择字幕&lt;/li&gt;
&lt;li&gt;&lt;code&gt;J&lt;/code&gt;反向循环选择字幕&lt;/li&gt;
&lt;li&gt;&lt;code&gt;#&lt;/code&gt;循环切换音轨&lt;/li&gt;
&lt;li&gt;&lt;code&gt;f&lt;/code&gt;切换全屏&lt;/li&gt;
&lt;li&gt;&lt;code&gt;T&lt;/code&gt;切换视频是否总在最前&lt;/li&gt;
&lt;li&gt;&lt;code&gt;s&lt;/code&gt;视频截图，包含字幕&lt;/li&gt;
&lt;li&gt;&lt;code&gt;S&lt;/code&gt;视频截图，不含字幕&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Option + s&lt;/code&gt;自动逐帧视频截图，再按一次停止截图&lt;/li&gt;
&lt;li&gt;&lt;code&gt;.&lt;/code&gt;前进到下一帧&lt;/li&gt;
&lt;li&gt;&lt;code&gt;,&lt;/code&gt;后退到下一帧&lt;/li&gt;
&lt;li&gt;&lt;code&gt;9&lt;/code&gt;音量－2&lt;/li&gt;
&lt;li&gt;&lt;code&gt;0&lt;/code&gt;音量＋2&lt;/li&gt;
&lt;li&gt;&lt;code&gt;[&lt;/code&gt;0.0901倍慢速播放&lt;/li&gt;
&lt;li&gt;&lt;code&gt;]&lt;/code&gt;1.1倍快速播放&lt;/li&gt;
&lt;li&gt;&lt;code&gt;{&lt;/code&gt;0.5倍慢速播放&lt;/li&gt;
&lt;li&gt;&lt;code&gt;}&lt;/code&gt;2倍快速播放&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Delete&lt;/code&gt;重置为正常播放速度&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;mpv支持自定义修改快捷键，只需要新建&lt;code&gt;~/.config/mpv/input.conf&lt;/code&gt;即可&lt;br&gt;创建方式跟上边一样&lt;br&gt;文档&lt;a href=&quot;https://github.com/mpv-player/mpv-blob/master/etc/input.conf&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;mpv keybindings&lt;/a&gt;是默认快捷键的配置&lt;br&gt;可以参考其中的内容并且根据自己的使用习惯来更改快捷键&lt;/p&gt;
&lt;p&gt;最后推荐一个大神写的lua脚本，可以实现一些比较方便的功能&lt;br&gt;具体可以查看他的这篇&lt;a href=&quot;https://songchenwen.com/tech/2015/05/09/mpv-player/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;全能高效的播放器mpv&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;Reference&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://intxt.net/meet-mpv/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;MPV播放器&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://songchenwen.com/tech/2015/05/09/mpv-player/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;全能高效的播放器mpv&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/mpv-player/mpv/blob/master/DOCS/man/options.rst&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;mpv options&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/mpv-player/mpv-blob/master/etc/input.conf&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;mpv keybindings&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;某只宠物说&lt;code&gt;欲奴&lt;/code&gt;出了，于是打算下载下来一起看&lt;br&gt;然后才想起这台电脑还没有安装播放器&lt;br&gt;搜索了一遍，发现mpv是大家都推崇的播放器&lt;br&gt;一番研究下来，分享一下自己的心得&lt;br&gt;
    
    </summary>
    
      <category term="Tech" scheme="http://orionur.github.io/categories/Tech/"/>
    
    
      <category term="Mac" scheme="http://orionur.github.io/tags/Mac/"/>
    
      <category term="MPV" scheme="http://orionur.github.io/tags/MPV/"/>
    
  </entry>
  
  <entry>
    <title>自定义terminal的提示符</title>
    <link href="http://orionur.github.io/2016/05/18/5/"/>
    <id>http://orionur.github.io/2016/05/18/5/</id>
    <published>2016-05-18T23:07:37.000Z</published>
    <updated>2016-05-18T22:08:37.000Z</updated>
    
    <content type="html">&lt;p&gt;Mac的terminal挺好用的，这种输入命令来执行各种强大的功能&lt;br&gt;让我有一种装逼的快感（虽然没人看到，估计妹纸也不会感兴趣）&lt;br&gt;但的确让我爱不释手&lt;br&gt;可是有个问题&lt;br&gt;每次我执行一堆命令后，想往回翻找找之前我都执行了哪些东西&lt;br&gt;毕竟还是在学习阶段，很多东西都需要重复去看&lt;br&gt;可是那一片黑底白字的命令让我有点眼花缭乱&lt;br&gt;上网搜了一下，有可以自定义终端提示符，于是尝试了一下&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;br&gt;结果如下图&lt;br&gt;&lt;img src=&quot;http://ww3.sinaimg.cn/large/badbf5f3gw1f3z5jzt7u0j20fo01dglv.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;这里简单说明一下&lt;br&gt;&lt;code&gt;Gundam&lt;/code&gt;是我的主机名，&lt;code&gt;Orion&lt;/code&gt;是我的用户名，&lt;code&gt;~&lt;/code&gt;是当前路径&lt;br&gt;这些所有都可以自己编辑修改的&lt;br&gt;也就是说，终端提示符想怎么改怎么改，随你自己喜欢&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;有些人觉得自己的主机名很奇怪，想修改的话很简单&lt;br&gt;输入&lt;code&gt;sudo scutil --set HostName xxx&lt;/code&gt;，其中xxx为你想修改成的名字&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;直接在命令提示符输入&lt;code&gt;nano ~/.bash_profile&lt;/code&gt;会进入一个文本编辑器&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://ww4.sinaimg.cn/large/badbf5f3gw1f3z5tdzzkwj20h501lwep.jpg&quot; alt=&quot;&quot;&gt;&lt;center&gt;大概长这样&lt;/center&gt;&lt;/p&gt;
&lt;p&gt;以上的是我的自定义的代码，我简单解释一下&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;export PS1=&amp;quot;xxx&amp;quot;&lt;/code&gt;是将PS1这个控制提示符内容色彩显示的参数输出&lt;br&gt;简单来说，就是执行这个参数所设定的颜色，来改变终端提示符&lt;br&gt;要注意的是，&lt;strong&gt;这个是必不可缺并且不能修改的&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;\[\e[0;xxm\]&lt;/code&gt;是一个颜色参数，其实xx是数字，代表不同的颜色，其中&lt;ul&gt;
&lt;li&gt;黑色&lt;code&gt;30&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;红色&lt;code&gt;31&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;绿色&lt;code&gt;32&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;黄色&lt;code&gt;33&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;蓝色&lt;code&gt;34&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;紫色&lt;code&gt;35&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;蓝绿色&lt;code&gt;36&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;白色&lt;code&gt;37&lt;/code&gt;&lt;br&gt;有一个特殊的&lt;code&gt;\e[0m\]&lt;/code&gt;是默认颜色，也就是不改变颜色，用默认的&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;还有一些显示参数&lt;ul&gt;
&lt;li&gt;换行&lt;code&gt;\n&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;当前日期&lt;code&gt;\d&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;当前时间（24小时制）&lt;code&gt;\t&lt;/code&gt;（大写显示12小时制）&lt;/li&gt;
&lt;li&gt;主机名（短）&lt;code&gt;\h&lt;/code&gt;（大写会显示全称）&lt;/li&gt;
&lt;li&gt;用户名&lt;code&gt;\u&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;提示符（root用户显示#，普通用户显示$）&lt;code&gt;\$&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;当前目录（短）&lt;code&gt;\w&lt;/code&gt;（大写会显示全称）&lt;br&gt;还有一些其他的命令，具体可以自己Google搜索&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;因此上边我的自定义PS1可以解读为&lt;br&gt;&lt;code&gt;[蓝绿色]主机名[黄色]@[紫色]用户名[绿色]:当前目录[红色] $[默认颜色]&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;最后添加一个默认颜色代码，是让以后自己输入以及显示的字符为原来的颜色&lt;br&gt;如果不添加的话，后边都会跟随之前的设定的颜色&lt;br&gt;这里如果我不设定，我自己输入的命令也好，输出显示的东西也好，都会变成红色&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;输入完成后，直接&lt;code&gt;Crl + X&lt;/code&gt;选择退出&lt;br&gt;程序会问你是否保存，直接&lt;code&gt;Y&lt;/code&gt;选择确认&lt;br&gt;如果是第一次建立这个文件，会询问你文件的文件名是什么&lt;br&gt;我们建立文件的时候有输入文件名bash_profile&lt;br&gt;所以直接按回车确认即可&lt;/p&gt;
&lt;p&gt;然后就大功告成了&lt;br&gt;以后可以很清楚的找到哪些是自己输入的命令，哪些是显示的信息&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;Reference&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://imwuyu.me/talk-about/modify-mac-osx-terminal-prompt-and-color.html/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;给Terminal施点魔法&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://blog.sina.com.cn/s/blog_76c853c20100ucpe.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;MAC+iTerm定制目录显示颜色和提示符&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;Mac的terminal挺好用的，这种输入命令来执行各种强大的功能&lt;br&gt;让我有一种装逼的快感（虽然没人看到，估计妹纸也不会感兴趣）&lt;br&gt;但的确让我爱不释手&lt;br&gt;可是有个问题&lt;br&gt;每次我执行一堆命令后，想往回翻找找之前我都执行了哪些东西&lt;br&gt;毕竟还是在学习阶段，很多东西都需要重复去看&lt;br&gt;可是那一片黑底白字的命令让我有点眼花缭乱&lt;br&gt;上网搜了一下，有可以自定义终端提示符，于是尝试了一下&lt;br&gt;
    
    </summary>
    
      <category term="Tech" scheme="http://orionur.github.io/categories/Tech/"/>
    
    
      <category term="Mac" scheme="http://orionur.github.io/tags/Mac/"/>
    
  </entry>
  
  <entry>
    <title>Mac下安装以及管理软件</title>
    <link href="http://orionur.github.io/2016/05/17/4/"/>
    <id>http://orionur.github.io/2016/05/17/4/</id>
    <published>2016-05-17T19:58:08.000Z</published>
    <updated>2016-05-18T03:04:00.000Z</updated>
    
    <content type="html">&lt;p&gt;OS X的系统跟Windows完全不一样，首先体现在软件的安装以及管理上边&lt;/p&gt;
&lt;p&gt;在Windows上安装软件首先需要去找那个软件的安装包&lt;br&gt;然后再下载下来选择安装的地方&lt;br&gt;而OS则并不需要那样&lt;br&gt;一般来说安装软件人们可能会选择去AppStore去下载安装&lt;br&gt;但实质上，由于AppStore上的审核时间过长，生态圈不完整，限制太多以及维护成本过高&lt;br&gt;让很多应用开发者被迫离开&lt;br&gt;很多软件已经出到很后的版本，但在App Store上，还是老版本&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;br&gt;于是，brew和brew-cask应运而生&lt;br&gt;诚然，在命令终端上安装以及管理软件对很多人（尤其是妹纸）来说并不是那么的友好&lt;br&gt;不过，这也因此提供了些机会给学计算机的理工男（承诺只修电脑，绝不过夜，欢迎来电咨询）&lt;/p&gt;
&lt;p&gt;在安装brew以及brew-cask之前，必须先安装Xcode&lt;br&gt;现在Xcode的安装直接去App Store搜索安装即可，很方便&lt;br&gt;完成后打开&lt;code&gt;terminal&lt;/code&gt;&lt;br&gt;输入&lt;code&gt;ruby -e &amp;quot;$(curl -fsSL https://raw.github.com/mxcl/homebrew/go)&amp;quot;&lt;/code&gt;&lt;br&gt;就会开始自动安装brew&lt;br&gt;结束后再输入&lt;code&gt;brew tap phinze/homebrew-cask &amp;amp;&amp;amp; brew install brew-cask&lt;/code&gt;&lt;br&gt;也是开始自动安装brew-cask&lt;br&gt;这样一来brew和brew-cask也就安装完毕。&lt;/p&gt;
&lt;p&gt;brew和brew-cask的区别，其实就是面向对象的不同&lt;br&gt;由于brew是下载源码解压然后配置以及安装，同时回包含相关依存库&lt;br&gt;并且自动配置好各种环境变量，而且易于卸载&lt;br&gt;因此brew对于程序员来说简直就是福音&lt;br&gt;简单的指令，就能快速安装和升级本地的各种开发环境&lt;br&gt;而brew-cask是下载已经编译好了的应用宝（.dmg/.pkg）&lt;br&gt;然后解压并且放在统一的目录中（/opt/homebrew-cask/Caskroom）&lt;br&gt;省去自己去寻找，下载，解压，拖拽等一系列步骤，并且卸载同样容易且干净&lt;br&gt;同时还能找到很多AppStore上没有或者最新的版本的软件&lt;br&gt;因此一般用户使用brew-cask安装软件即可&lt;br&gt;如果brew-cask上找不到想要的程序再去brew上找。&lt;/p&gt;
&lt;p&gt;安装命令什么的十分简单&lt;br&gt;输入&lt;code&gt;brew cask install xxx&lt;/code&gt;就可以安装xxx软件&lt;br&gt;至于要查询这个软件是否在brew-cask上，可以输入&lt;code&gt;brew cask search xxx&lt;/code&gt;&lt;br&gt;这样brew-cask会自动搜寻库中与xxx相匹配的软件&lt;br&gt;之后输入&lt;code&gt;brew cask info xxx&lt;/code&gt;可以查看该软件的详细信息，包括版本，是否已安装&lt;br&gt;卸载软件也十分简单，输入&lt;code&gt;brew cask uninstall xxx&lt;/code&gt;就可以很好地卸载&lt;br&gt;想查看已经装了什么软件，可以输入&lt;code&gt;brew cask list&lt;/code&gt;来查看&lt;br&gt;常用的命令就以上几个，还有一些其他的命令，可以直接输入&lt;code&gt;brew cask&lt;/code&gt;来查看&lt;br&gt;&lt;img src=&quot;http://ww3.sinaimg.cn/large/badbf5f3gw1f3yzy4amllj20w40ik10r.jpg&quot; alt=&quot;brew cask&quot;&gt;至于brew的命令，其实跟brew-cask是一样的，把&lt;code&gt;brew&lt;/code&gt;替换掉&lt;code&gt;brew cask&lt;/code&gt;即可&lt;/p&gt;
&lt;p&gt;至于软件的更新，目前只有两种方法&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;软件自己的更新选项&lt;/li&gt;
&lt;li&gt;使用&lt;code&gt;brew cask uninstall xxx &amp;amp;&amp;amp; brew cask install xxx&lt;/code&gt;先卸载再重新安装来实现更新软件&lt;blockquote&gt;
&lt;p&gt;第二种方法去更新例如QQ这样的软件是否会导致聊天记录之类的历史纪录丢失&lt;br&gt;我没去测试过（懒得测试）&lt;br&gt;不过现在大部分的软件都有搜索更新的功能，可以实现自动更新，因此也不必太纠结&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;Reference&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://ksmx.me/homebrew-cask-cli-workflow-to-install-mac-applications&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;简介优雅的Mac OS X软件安装体验 - homebrew-cask&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.ysbookg.com/wljs/2821.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;brew安装使用教程&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;OS X的系统跟Windows完全不一样，首先体现在软件的安装以及管理上边&lt;/p&gt;
&lt;p&gt;在Windows上安装软件首先需要去找那个软件的安装包&lt;br&gt;然后再下载下来选择安装的地方&lt;br&gt;而OS则并不需要那样&lt;br&gt;一般来说安装软件人们可能会选择去AppStore去下载安装&lt;br&gt;但实质上，由于AppStore上的审核时间过长，生态圈不完整，限制太多以及维护成本过高&lt;br&gt;让很多应用开发者被迫离开&lt;br&gt;很多软件已经出到很后的版本，但在App Store上，还是老版本&lt;br&gt;
    
    </summary>
    
      <category term="Tech" scheme="http://orionur.github.io/categories/Tech/"/>
    
    
      <category term="Mac" scheme="http://orionur.github.io/tags/Mac/"/>
    
      <category term="Brew" scheme="http://orionur.github.io/tags/Brew/"/>
    
      <category term="Brew-Cask" scheme="http://orionur.github.io/tags/Brew-Cask/"/>
    
  </entry>
  
  <entry>
    <title>快捷键合集</title>
    <link href="http://orionur.github.io/2016/05/14/3/"/>
    <id>http://orionur.github.io/2016/05/14/3/</id>
    <published>2016-05-15T06:04:53.000Z</published>
    <updated>2016-05-18T02:32:45.000Z</updated>
    
    <content type="html">&lt;p&gt;这里纪录一些我使用各种软件以及操作系统上的快捷键，以此来简化操作&lt;br&gt;主要针对OS X，Windows和Linux不会涉及&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h3 id=&quot;OS-X&quot;&gt;&lt;a href=&quot;#OS-X&quot; class=&quot;headerlink&quot; title=&quot;OS X&quot;&gt;&lt;/a&gt;OS X&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;新增邮件&lt;code&gt;command + shift + I&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;选取文字翻译&lt;code&gt;command + control + D&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;全屏截图&lt;code&gt;command + shift + 3&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;范围截图&lt;code&gt;command + shift + 4&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;隐藏窗口&lt;code&gt;command + H&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;清倒废纸篓&lt;code&gt;command + shift + Del&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;删除光标后一个字符&lt;code&gt;fn + delete&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;Chrome&quot;&gt;&lt;a href=&quot;#Chrome&quot; class=&quot;headerlink&quot; title=&quot;Chrome&quot;&gt;&lt;/a&gt;Chrome&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;新建标签页&lt;code&gt;command + T&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;在后台打开链接&lt;code&gt;command + 目标&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;打开链接并跳转&lt;code&gt;command + shift + 目标&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;重新打开关闭的标签页&lt;code&gt;command + shift + T&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;关闭标签页&lt;code&gt;command + W&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;向左移动标签页&lt;code&gt;command + option + Left&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;向右移动标签页&lt;code&gt;command + option + Right&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;打开历史纪录&lt;code&gt;command + Y&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;切换到地址栏&lt;code&gt;command + L&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;刷新&lt;code&gt;command + R&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;查找&lt;code&gt;command + F&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;查找下一条&lt;code&gt;command + G&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;查找上一条&lt;code&gt;shift + enter&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;CLion&quot;&gt;&lt;a href=&quot;#CLion&quot; class=&quot;headerlink&quot; title=&quot;CLion&quot;&gt;&lt;/a&gt;CLion&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;对齐缩进（Align Indentation）：&lt;code&gt;command + option + L&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;这里纪录一些我使用各种软件以及操作系统上的快捷键，以此来简化操作&lt;br&gt;主要针对OS X，Windows和Linux不会涉及&lt;/p&gt;
    
    </summary>
    
      <category term="Tech" scheme="http://orionur.github.io/categories/Tech/"/>
    
    
      <category term="Mac" scheme="http://orionur.github.io/tags/Mac/"/>
    
      <category term="OS X" scheme="http://orionur.github.io/tags/OS-X/"/>
    
      <category term="Chrome" scheme="http://orionur.github.io/tags/Chrome/"/>
    
      <category term="CLion" scheme="http://orionur.github.io/tags/CLion/"/>
    
  </entry>
  
  <entry>
    <title>博客的迁移</title>
    <link href="http://orionur.github.io/2016/05/10/2/"/>
    <id>http://orionur.github.io/2016/05/10/2/</id>
    <published>2016-05-11T01:15:28.000Z</published>
    <updated>2016-05-18T03:03:44.000Z</updated>
    
    <content type="html">&lt;p&gt;由于一系列的原因，我入了台MacBook Pro，开始练习使用Mac&lt;br&gt;网上很多如何在Mac上创建hexo的教程，我也就不重复太多&lt;br&gt;大家可以参考一下这个教程&lt;a href=&quot;http://yebujimo.com/2015/03/15/Mac下搭建Hexo博客教程&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Mac下搭建Hexo博客教程&lt;/a&gt;&lt;br&gt;大概讲一下我所遇到的问题&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;由于是第一次使用Mac，所以很多东西都不太懂&lt;br&gt;跟着教程走，安装git和安装node.js都没什么问题&lt;br&gt;可是在配置SSH的时候就出问题了&lt;br&gt;当我生成新的key文件后，他要求打开id_rsa.pub文件，复制里面的SSH key到Github&lt;br&gt;可是我怎么也找不到id_rsa.pub文件&lt;br&gt;后来经过搜索，原来是在terminal里输入&lt;code&gt;open .ssh&lt;/code&gt;进入.ssh文件夹&lt;br&gt;&lt;font color=&quot;blue&quot;&gt;注意: 必须是在与之前生成新key相同的目录下&lt;/font&gt;&lt;br&gt;之后就能成功连接到Github了&lt;/li&gt;
&lt;li&gt;遇到第二个问题是安装Hexo，不知道为什么一直提示出错&lt;br&gt;后来使用&lt;code&gt;sudo&lt;/code&gt;命令在root权限下成功&lt;br&gt;之后就没什么其他大的问题了&lt;/li&gt;
&lt;li&gt;第三个问题是，我把原来我windows里hexo的文件全部拷贝过来替换&lt;br&gt;但是在执行&lt;code&gt;hexo s&lt;/code&gt;的时候会出现一些error的信息&lt;br&gt;虽然不影响什么，但看着就是不爽&lt;br&gt;这时候只要重新&lt;code&gt;hexo g&lt;/code&gt;一下就ok&lt;/li&gt;
&lt;li&gt;还有就是&lt;code&gt;hexo d&lt;/code&gt;的时候，需要输入用户名和密码&lt;br&gt;输入密码的时候，由于不可看，所以要注意的是，大小写要用&lt;code&gt;caps lock&lt;/code&gt;来切换&lt;br&gt;用&lt;code&gt;shift&lt;/code&gt;并没有效果，我就是在此捣鼓了好久找原因&lt;br&gt;如果不想每次都输入用户名和密码，只要在hexo的配置文件&lt;code&gt;_config.yml&lt;/code&gt;里&lt;br&gt;把&lt;code&gt;repo&lt;/code&gt;的地址改成&lt;code&gt;git@github.com:xxx/xxx.github.io.git&lt;/code&gt;即可&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;至此，我的blog迁移到此为止，至此以后我会在MacBook上写博客&lt;br&gt;对于OS系统还在研究中，软件工具什么的也在筛选过程中&lt;br&gt;之后会把一些心得体会贴上来，以供参考&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;Reference&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://yebujimo.com/2015/03/15/Mac下搭建Hexo博客教程&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Mac下搭建Hexo博客教程&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;由于一系列的原因，我入了台MacBook Pro，开始练习使用Mac&lt;br&gt;网上很多如何在Mac上创建hexo的教程，我也就不重复太多&lt;br&gt;大家可以参考一下这个教程&lt;a href=&quot;http://yebujimo.com/2015/03/15/Mac下搭建Hexo博客教程&quot;&gt;Mac下搭建Hexo博客教程&lt;/a&gt;&lt;br&gt;大概讲一下我所遇到的问题&lt;/p&gt;
    
    </summary>
    
      <category term="Tech" scheme="http://orionur.github.io/categories/Tech/"/>
    
    
      <category term="Hexo" scheme="http://orionur.github.io/tags/Hexo/"/>
    
      <category term="GitHub" scheme="http://orionur.github.io/tags/GitHub/"/>
    
      <category term="Mac" scheme="http://orionur.github.io/tags/Mac/"/>
    
  </entry>
  
  <entry>
    <title>安家立业</title>
    <link href="http://orionur.github.io/2016/04/28/1/"/>
    <id>http://orionur.github.io/2016/04/28/1/</id>
    <published>2016-04-29T05:54:34.000Z</published>
    <updated>2016-05-18T03:03:27.000Z</updated>
    
    <content type="html">&lt;p&gt;辞职后，一直沉迷于游戏，在痛定思痛下，决定找些技术帖来看看锻炼一下自己的技术水平&lt;br&gt;无意中找到几个技术博客，觉得这样弄个博客似乎也挺不错的&lt;br&gt;不但可以记录自己的一些心得体会，同时也算是一种鞭策于自我督促吧&lt;br&gt;于是也打算搭一个博客来玩玩&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;blockquote&gt;
&lt;p&gt;由于我的系统是Windows，因此此文仅针对与探讨在Windows环境下遇到的问题&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;a href=&quot;http://zipperary.com/2013/05/28/hexo-guide-2/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Zippera&lt;/a&gt;的这篇文章写得其实已经挺清楚了，不过也许是旧版本的问题，不太适合现在新的版本&lt;br&gt;我在安装调试搭建的时候都没有遇到问题，deploy也成功，可是在GitHub上死活都是404&lt;br&gt;网上苦寻无果，在我即将放弃的时候，我看到了这篇&lt;a href=&quot;https://xuanwo.org/2015/03/26/hexo-intor/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;blog&lt;/a&gt;&lt;br&gt;里面说到要激活GitHub上&lt;code&gt;GitHub Pages&lt;/code&gt;，我才灵光一闪&lt;br&gt;我的英文名是Orion，可是GitHub上Orion被注册了&lt;br&gt;我退而求其次，注册OrionUR作为我的用户名，而UR是University of Regina的缩写&lt;br&gt;也就是我在加拿大毕业的学校&lt;br&gt;但是我新建的 repository，地址却是orion.github.io&lt;br&gt;因此虽然上边我激活了&lt;code&gt;GitHub Pages&lt;/code&gt;，可依然404&lt;br&gt;直到我把地址改为&lt;a href=&quot;http://orionur.github.io&quot;&gt;orionur.github.io&lt;/a&gt;，才真正成功&lt;/p&gt;
&lt;p&gt;到此为止，我的博客终于在GitHub上安家了&lt;br&gt;至于搞不搞独立域名，这就要看心情了&lt;br&gt;主题也顺利解决，当中没有出什么意外，剩下的也就是个性优化以及小微调&lt;/p&gt;
&lt;p&gt;最后，为我的博客的成立，撒花~~~&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;Reference&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://zipperary.com/2013/05/28/hexo-guide-2/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Zippera&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://xuanwo.org/2015/03/26/hexo-intor/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;史上最详细的Hexo博客搭建图文教程&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;辞职后，一直沉迷于游戏，在痛定思痛下，决定找些技术帖来看看锻炼一下自己的技术水平&lt;br&gt;无意中找到几个技术博客，觉得这样弄个博客似乎也挺不错的&lt;br&gt;不但可以记录自己的一些心得体会，同时也算是一种鞭策于自我督促吧&lt;br&gt;于是也打算搭一个博客来玩玩&lt;/p&gt;
    
    </summary>
    
      <category term="Tech" scheme="http://orionur.github.io/categories/Tech/"/>
    
    
      <category term="Hexo" scheme="http://orionur.github.io/tags/Hexo/"/>
    
      <category term="GitHub" scheme="http://orionur.github.io/tags/GitHub/"/>
    
      <category term="Windows" scheme="http://orionur.github.io/tags/Windows/"/>
    
  </entry>
  
</feed>
